<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dLngT4h0df0//RFKoRy1UgcAAAAASUVORK5CYII=
</value>
  </data>
</root>